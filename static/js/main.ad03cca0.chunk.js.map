{"version":3,"sources":["components/Card/Card.module.css","components/common/Search/Search.module.css","components/NotFoundPage/NotFoundPage.module.css","components/common/Message/Message.module.css","components/CardPage/HourElement/HourElement.module.css","components/AddForm/AddMode.module.css","components/CardPage/CardPage.module.css","App.module.css","components/common/CardButton/CardButton.module.css","components/SearchResulItem/SearchResultItem.module.css","components/common/Title/Title.module.css","components/common/Preloader/Preloader.module.css","components/CardPage/HourlyElement/HourlyElement.module.css","components/Main/Main.module.css","components/common/Title/Title.tsx","store/appReducer.ts","components/common/Message/Message.tsx","api/api.ts","store/hourlyDataReducer.tsx","store/currentCityReducer.ts","components/common/Preloader/Preloader.tsx","components/common/Button/Button.tsx","components/CardPage/HourlyElement/HourlyElement.tsx","components/CardPage/HourElement/HourElement.tsx","components/CardPage/CardPage.tsx","components/common/CardButton/CardButton.tsx","store/weatherReducer.ts","assets/weather/cloud.jpg","assets/weather/rain.jpg","assets/weather/snow.jpg","assets/weather/haze.jpg","assets/weather/clear.jpg","components/Card/Card.tsx","components/SearchResulItem/SearchResultItem.tsx","store/searchReducer.ts","components/common/Search/Search.tsx","components/AddForm/AddForm.tsx","components/Main/Main.tsx","components/NotFoundPage/NotFoundPage.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","Title","title","style","className","children","classes","s","initialState","error","message","show","setMessage","type","data","appReducer","state","action","Message","dispatch","useDispatch","useState","timeoutID","setTimeoutID","useEffect","id","window","setTimeout","clearTimeout","messageStyle","progressbar","animationDuration","instance","axios","create","baseURL","key","weatherAPI","city","get","group","join","cityID","searchAPI","currentCityAPI","hourlyDataAPI","lat","lon","hourlyDataReducer","getCurrentCityByID","then","response","coord","hourly","getHourlyData","name","catch","currentCityReducer","Preloader","preloader","Button","onClick","restProps","HourlyElement","temp","celsius","Math","round","showTemp","element","marginBottom","HourElement","dt","date","Date","hours","getHours","dd","getDate","mm","getMonth","yy","getFullYear","wrapper","time","day","withRouter","props","match","params","commonData","useSelector","currentCity","hourlyData","hourlyTemp","map","el","cityName","flag","src","sys","country","toLowerCase","alt","weather","description","navigation","backButton","to","PATH","MAIN","refreshButton","dataWrapper","todayData","todayTitle","todayWeatherIcon","icon","todayDescription","todayBody","todayTemp","main","otherWeatherDataWrapper","otherWeatherData","feels_like","temp_max","temp_min","wind","speed","deg","pressure","humidity","visibility","margin","hourlyWrapper","desk","items","CardButton","btn","color","fontSize","addCity","weatherReducer","validate","find","newState","Card","removeCard","refreshCard","weatherBg","clearImg","snowImg","rainImg","cloudImg","hazeImg","card","bg","marginRight","info","buttons","refresh","remove","SearchResultItem","item","searchReducer","Search","value","setValue","setError","errorText","setErrorText","showSearchHelper","setShowSearchHelper","searchData","search","length","list","getSearchResult","onSearchItemClick","getState","status","localStorage","setItem","JSON","stringify","errorStyle","input","searchResult","label","placeholder","autoFocus","onChange","e","currentTarget","replace","searchList","send","trim","AddForm","onSearchFinish","onCloseClick","mask","form","close","Main","addMode","setAddMode","handler","bool","cardID","storage","getItem","filtered","parse","filter","citiesID","cards","cardsWrapper","NotFoundPage","content","text","link","CARD","Routes","path","exact","render","App","common","app","footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad03cca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Card_wrapper__Y1mh2\",\"card\":\"Card_card__1trhp\",\"bg\":\"Card_bg__gTgqw\",\"title\":\"Card_title___D0DM\",\"icon\":\"Card_icon__VIndm\",\"info\":\"Card_info__XI5iQ\",\"date\":\"Card_date__2aIS4\",\"temp\":\"Card_temp__1rb5I\",\"description\":\"Card_description__2pdNs\",\"buttons\":\"Card_buttons__30KMi\",\"refresh\":\"Card_refresh__2YCdE\",\"remove\":\"Card_remove__366hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__1nRsR\",\"input\":\"Search_input__3KYZK\",\"errorStyle\":\"Search_errorStyle__1e8H4\",\"send\":\"Search_send__J10O8\",\"error\":\"Search_error__3TZeS\",\"searchList\":\"Search_searchList__Abnnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFoundPage_wrapper__1ypP0\",\"content\":\"NotFoundPage_content__3Rbwr\",\"text\":\"NotFoundPage_text__31eaG\",\"link\":\"NotFoundPage_link__1ekr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2N8MC\",\"progressbar\":\"Message_progressbar__yKWpq\",\"animate\":\"Message_animate__3qnUc\",\"error\":\"Message_error__1t7X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HourElement_wrapper__2Dq8w\",\"element\":\"HourElement_element__2uYWf\",\"day\":\"HourElement_day__3MrH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddMode_wrapper__101Kg\",\"mask\":\"AddMode_mask__3PgEO\",\"form\":\"AddMode_form__3SaAH\",\"close\":\"AddMode_close__31jhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardPage_wrapper__3FhoX\",\"cityName\":\"CardPage_cityName__2Ri40\",\"flag\":\"CardPage_flag__1SVbY\",\"navigation\":\"CardPage_navigation__25_ej\",\"backButton\":\"CardPage_backButton__3-t-4\",\"refreshButton\":\"CardPage_refreshButton__1-fHC\",\"name\":\"CardPage_name__3fXkt\",\"country\":\"CardPage_country__31kgR\",\"otherWeatherDataWrapper\":\"CardPage_otherWeatherDataWrapper__3KBGM\",\"dataWrapper\":\"CardPage_dataWrapper__3AvmD\",\"todayData\":\"CardPage_todayData__V9XTu\",\"todayTitle\":\"CardPage_todayTitle__zjmhm\",\"todayWeatherIcon\":\"CardPage_todayWeatherIcon__2GoE7\",\"todayDescription\":\"CardPage_todayDescription__3G3fF\",\"todayTemp\":\"CardPage_todayTemp__xrx5l\",\"otherWeatherData\":\"CardPage_otherWeatherData__2e2p_\",\"hourlyWrapper\":\"CardPage_hourlyWrapper__3oebT\",\"desk\":\"CardPage_desk__1qYN_\",\"hours\":\"CardPage_hours__31ITy\",\"items\":\"CardPage_items__3cJwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3jqhq\",\"title\":\"App_title__1IkJy\",\"footer\":\"App_footer__37TDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardButton_wrapper__3JBkr\",\"btn\":\"CardButton_btn__3gFKH\",\"title\":\"CardButton_title__3QGYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchResultItem_item__2l1tz\",\"country\":\"SearchResultItem_country__3V1Ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__iWpEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__p87P6\",\"lds-dual-ring\":\"Preloader_lds-dual-ring__1mf4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"HourlyElement_element__3hnDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsWrapper\":\"Main_cardsWrapper__2KM_s\"};","import React from \"react\";\r\nimport s from \"./Title.module.css\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    style?: {}\r\n    className?: string\r\n}\r\nconst Title:React.FC<PropsType> = ({title, style, className, children}) => {\r\n    const classes = className || \"\"\r\n\r\n    return(\r\n        <div className={classes}>\r\n            <span className={s.title} style={style}>{children}{title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import {CommonStateType} from \"./appReducerTypes\";\r\n\r\nexport type ActionType = SetMessageType\r\nconst initialState:CommonStateType = {\r\n    error: false,\r\n    message: \"\",\r\n    show: false\r\n}\r\nconst appReducer = (state = initialState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case \"SET-MESSAGE\": {\r\n            return {...action.data}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (error:boolean, message:string, show:boolean) => ({type: 'SET-MESSAGE', data:{error, message, show}} as const)\r\ntype SetMessageType = ReturnType<typeof setMessage>\r\n\r\nexport default appReducer;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Message.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setMessage} from \"../../../store/appReducer\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n    error: boolean\r\n}\r\n\r\nconst Message:React.FC<PropsType> = ({message, error}) => {\r\n    const dispatch = useDispatch()\r\n    const [timeoutID, setTimeoutID] = useState<number>(0)\r\n    const progressDuration = 3000\r\n\r\n    useEffect(() => {\r\n        const id:number = window.setTimeout(() => {\r\n            dispatch(setMessage(false, \"\", false))\r\n        }, progressDuration)\r\n        setTimeoutID(id)\r\n        return clearTimeout(timeoutID)\r\n    },[])\r\n\r\n    const messageStyle = error ? `${s.message} ${s.error}` : s.message\r\n\r\n    return (\r\n        <div className={messageStyle}>\r\n            <div className={s.progressbar} style={{animationDuration: `${progressDuration}ms`}}></div>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import axios from \"axios\";\r\nimport {WeatherDataType} from \"../store/weatherReducerTypes\";\r\nimport {SearchDataType} from \"../store/searchReducerTypes\";\r\nimport {HourlyStateType} from \"../store/hourlyDataReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n})\r\nconst key = \"ca71cc9121f92b686ca23cb9135132aa\"\r\n\r\ntype WeatherArrayType = {\r\n    cnt: number\r\n    list: WeatherDataType[]\r\n}\r\n\r\nexport const weatherAPI = {\r\n    getCities(city: string) {\r\n        return instance.get<WeatherDataType>(`weather?q=${city}&units=metric&appid=${key}`)\r\n    },\r\n    getCitiesById(group: string[]) {\r\n        return instance.get<WeatherArrayType>(`group?id=${group.join(\",\")}&units=metric&appid=${key}`)\r\n    },\r\n    updateCityData(cityID: number) {\r\n        return instance.get<WeatherArrayType>(`group?id=${cityID}&units=metric&appid=${key}`)\r\n    },\r\n    getOneCityById(id:number) {\r\n        return instance.get<WeatherDataType>(`weather?id=${id}&units=metric&appid=${key}`)\r\n    }\r\n}\r\n\r\ntype searchAPIType = {\r\n    message: string\r\n    cod: string\r\n    count: number\r\n    list: Array<SearchDataType>\r\n}\r\nexport const searchAPI = {\r\n    getSearch(city: string) {\r\n        return instance.get<searchAPIType>(`find?q=${city}&units=metric&appid=${key}`)\r\n    }\r\n}\r\n\r\nexport const currentCityAPI = {\r\n    getCommonData(cityID:number) {\r\n        return instance.get<WeatherDataType>(`weather?id=${cityID}&units=metric&appid=${key}`)\r\n    }\r\n}\r\n\r\ntype HourlyDataType = {\r\n    hourly: HourlyStateType[]\r\n}\r\n\r\nexport const hourlyDataAPI = {\r\n    getData(lat:number, lon:number) {\r\n        return instance.get<HourlyDataType>(`onecall?&lat=${lat}&lon=${lon}&units=metric&exclude=minutely&appid=${key}`)\r\n    }\r\n}","import {hourlyDataAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {HourObjectType} from \"./hourlyDataReducerTypes\";\r\n\r\ntype ActionType = SetHourlyDataType\r\n\r\nexport type HourlyStateType = HourObjectType[]\r\nconst initialState: HourlyStateType | [] = []\r\n\r\nconst hourlyDataReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"SET-HOURLY-DATA\": {\r\n            return [...action.data]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setHourlyData = (data:HourlyStateType[]) => ({type: 'SET-HOURLY-DATA', data} as const)\r\ntype SetHourlyDataType = ReturnType<typeof setHourlyData>\r\n\r\nexport const getHourlyData = (lat: number, lon: number): ThunkAction<void, AppStateType, unknown, ActionType> => (dispatch) => {\r\n    hourlyDataAPI.getData(lat, lon).then((response) => {\r\n        dispatch(setHourlyData(response.data.hourly))\r\n    })\r\n}\r\n\r\nexport default hourlyDataReducer;","import {Dispatch} from \"redux\";\r\nimport {currentCityAPI} from \"../api/api\";\r\nimport {WeatherDataType} from \"./weatherReducerTypes\";\r\nimport {setMessage} from \"./appReducer\";\r\nimport {getHourlyData} from \"./hourlyDataReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {ActionType as MessageActionType}  from \"./appReducer\";\r\n\r\ntype ActionType = SetCurrentCityType\r\nconst initialState: WeatherDataType | null = null\r\n\r\nconst currentCityReducer = (state = initialState, action:ActionType) => {\r\n    switch (action.type) {\r\n        case \"SET-CURRENT-CITY\": {\r\n            return action.data\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setCurrentCity = (data: WeatherDataType) => ({type: 'SET-CURRENT-CITY', data} as const)\r\ntype SetCurrentCityType = ReturnType<typeof setCurrentCity>\r\n\r\nexport const getCurrentCityByID = (cityID: number):ThunkAction<void, AppStateType, unknown, ActionType | MessageActionType> => (dispatch) => {\r\n    currentCityAPI.getCommonData(cityID).then((response) => {\r\n        const lat = response.data.coord.lat\r\n        const lon = response.data.coord.lon\r\n\r\n        dispatch(setCurrentCity(response.data))\r\n        dispatch(getHourlyData(lat, lon))\r\n        dispatch(setMessage(false, `${response.data.name} was updated`, true))\r\n    }).catch((error) => {\r\n        dispatch(setMessage(true, `${error.response.data.message}`, true))\r\n    })\r\n}\r\n\r\nexport default currentCityReducer;","import React from \"react\";\r\nimport s from \"./Preloader.module.css\";\r\n\r\ntype PropsType = {\r\n    style?: {}\r\n}\r\nconst Preloader:React.FC<PropsType> = ({style}) => {\r\n    return (\r\n        <div style={style} className={s.preloader}></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\n\r\ntype PropsType = {\r\n    onClick: () => void\r\n    className?: string\r\n}\r\n\r\nconst Button: React.FC<PropsType> = ({onClick, className, ...restProps}) => {\r\n    return(\r\n        <button className={className} onClick={onClick} {...restProps}></button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport s from \"./HourlyElement.module.css\";\r\n\r\ntype PropsType = {\r\n    temp: number\r\n}\r\n\r\nconst HourlyElement:React.FC<PropsType> = ({temp}) => {\r\n    const celsius = Math.round(temp)\r\n    const showTemp = celsius > 0 ? `+${celsius}` : `${celsius}`\r\n\r\n    return (\r\n        <div className={s.element} style={{marginBottom: `${celsius * 10}px`}}>\r\n            {showTemp}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourlyElement;","import React from \"react\";\r\nimport s from \"./HourElement.module.css\";\r\n\r\ntype PropsType = {\r\n    dt: number\r\n}\r\n\r\nconst HourElement:React.FC<PropsType> = ({dt}) => {\r\n    const date = new Date(dt * 1000)\r\n    const hours = date.getHours()\r\n    const dd = date.getDate()\r\n    const mm = date.getMonth()\r\n    const yy = date.getFullYear()\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.element}>\r\n                <span className={s.time}>{hours < 10 ? `0${hours}:00` : `${hours}:00`}</span>\r\n                <span className={s.day}>{`${dd}.${mm}.${yy}`}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourElement;","import React, {useEffect} from \"react\";\r\nimport s from \"./CardPage.module.css\";\r\nimport {NavLink, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCurrentCityByID} from \"../../store/currentCityReducer\";\r\nimport {WeatherDataType} from \"../../store/weatherReducerTypes\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {PATH} from \"../../Routes\";\r\nimport Button from \"../common/Button/Button\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport {HourlyStateType} from \"../../store/hourlyDataReducer\";\r\nimport HourlyElement from \"./HourlyElement/HourlyElement\";\r\nimport HourElement from \"./HourElement/HourElement\";\r\n\r\ntype PropsType = {\r\n    id?: string\r\n}\r\n\r\nconst CardPage: React.FC<RouteComponentProps<PropsType>> = (props) => {\r\n    const id = props.match.params.id && +props.match.params.id\r\n    const dispatch = useDispatch()\r\n    const commonData = useSelector<AppStateType, WeatherDataType | null>(state => state.currentCity)\r\n    const hourlyData = useSelector<AppStateType, HourlyStateType | null>(state => state.hourly)\r\n\r\n    const date = new Date()\r\n    const dd = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`\r\n    const mm = date.getMonth() < 10 ? `0${date.getMonth()}` : `${date.getMonth()}`\r\n    const yy = `${date.getFullYear()}`\r\n\r\n    useEffect(() => {\r\n        id && dispatch(getCurrentCityByID(id))\r\n    }, [])\r\n\r\n    const handler = () => {\r\n        id && dispatch(getCurrentCityByID(id))\r\n    }\r\n\r\n    const hourlyTemp = hourlyData && hourlyData.map((el) => <HourlyElement key={el.dt} temp={el.temp}/>)\r\n    const hours = hourlyData && hourlyData.map((el) => <HourElement key={el.dt} dt={el.dt}/>)\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.cityName}>\r\n                {commonData\r\n                    ? <>\r\n                        <img className={s.flag}\r\n                             src={`https://openweathermap.org/images/flags/${commonData.sys.country.toLowerCase()}.png`}\r\n                             alt={commonData.weather[0].description}/>\r\n                        <span className={s.name}>{commonData.name}</span>\r\n                        <span className={s.country}>({commonData.sys.country})</span>\r\n                    </>\r\n                    : <Preloader/>}\r\n            </div>\r\n\r\n            <div className={s.navigation}>\r\n                <NavLink className={s.backButton} to={PATH.MAIN}>back</NavLink>\r\n                <Button className={s.refreshButton} onClick={handler}><CachedIcon /></Button>\r\n            </div>\r\n\r\n            <div className={s.dataWrapper}>\r\n                <div className={s.todayData}>\r\n                    {commonData\r\n                        ? <>\r\n                            <div className={s.todayTitle}>Today {`${dd}.${mm}.${yy}`}</div>\r\n                            <img className={s.todayWeatherIcon} src={`https://openweathermap.org/img/wn/${commonData.weather[0].icon}@2x.png`} alt={commonData.weather[0].description}/>\r\n                            <span className={s.todayDescription}>-{commonData.weather[0].description}-</span>\r\n                            <div className={s.todayBody}>\r\n                                <span className={s.todayTemp}>{Math.round(commonData.main.temp)}°C</span>\r\n                                <div className={s.otherWeatherDataWrapper}>\r\n                                    <div>\r\n                                        <span className={s.otherWeatherData}>Feels like: <span>{Math.round(commonData.main.feels_like)}°C</span></span>\r\n                                        <span className={s.otherWeatherData}>Max temperature: <span>{Math.round(commonData.main.temp_max)}°C</span></span>\r\n                                        <span className={s.otherWeatherData}>Min temperature: <span>{Math.round(commonData.main.temp_min)}°C</span></span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className={s.otherWeatherData}>Wind speed: <span>{commonData.wind.speed} m.s.</span></span>\r\n                                        <span className={s.otherWeatherData}>Wind angle: <span>{commonData.wind.deg} deg</span></span>\r\n                                        <span className={s.otherWeatherData}>Pressure: <span>{commonData.main.pressure} hPa</span></span>\r\n                                        <span className={s.otherWeatherData}>Humidity: <span>{commonData.main.humidity} %</span></span>\r\n                                        <span className={s.otherWeatherData}>Visibility: <span>{commonData.visibility / 1000} km</span></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </>\r\n                        : <Preloader style={{margin: \"0 auto\"}}/>}\r\n                </div>\r\n                <div className={s.hourlyWrapper}>\r\n                    <div className={s.desk}>\r\n                        <div className={s.hours}>\r\n                            {hours}\r\n                        </div>\r\n                        <div className={s.items}>\r\n                            {hourlyTemp}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CardPage);","import s from \"./CardButton.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React from \"react\";\r\nimport Button from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    onClick: (bool:boolean) => void\r\n}\r\n\r\nconst CardButton: React.FC<PropsType> = ({onClick}) => {\r\n    const handler = () => {\r\n        onClick(true)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <span className={s.title}>Add new place to your cards list</span>\r\n            <Button className={s.btn} onClick={handler}><AddIcon style={{color: \"#fff\", fontSize: \"140px\"}}/></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardButton;","import {Dispatch} from \"redux\"\r\nimport {weatherAPI} from \"../api/api\"\r\nimport {WeatherDataType} from \"./weatherReducerTypes\";\r\nimport {setMessage} from \"./appReducer\";\r\nimport {AppStateType} from \"./store\";\r\n\r\ntype ActionType =\r\n    | AddCityType\r\n    | AddCitiesGroupType\r\n    | RemoveCityType\r\n    | RefreshCityType\r\n\r\nconst initialState: Array<WeatherDataType> = []\r\n\r\nconst weatherReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"ADD-CITY\": {\r\n            const validate = state.find((el) => el.id === action.data.id)\r\n            if (!validate) {\r\n                return [...state, action.data]\r\n            }\r\n            return state\r\n        }\r\n        case \"ADD-CITIES-GROUP\": {\r\n            return [...state, ...action.data]\r\n        }\r\n        case \"REMOVE-CITY\": {\r\n            return [...action.data]\r\n        }\r\n        case \"REFRESH-CITY\": {\r\n            let newState = [...state].map((el) => {\r\n                if(el.id === action.data[0].id) {\r\n                    return action.data[0]\r\n                } return el\r\n            })\r\n\r\n            return [...newState]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addCity = (data: WeatherDataType) => ({type: \"ADD-CITY\", data} as const)\r\ntype AddCityType = ReturnType<typeof addCity>\r\n\r\nexport const refreshCity = (data: WeatherDataType[]) => ({type: \"REFRESH-CITY\", data} as const)\r\ntype RefreshCityType = ReturnType<typeof refreshCity>\r\n\r\nexport const getRefreshedCity = (cityID: number) => (dispatch: Dispatch) => {\r\n    weatherAPI.updateCityData(cityID).then(response => {\r\n        if(response.status === 200) {\r\n            dispatch(refreshCity(response.data.list))\r\n            dispatch(setMessage(false, `The card with ${response.data.list[0].name} was successful refreshed`, true))\r\n        }\r\n    }).catch((error) => {\r\n        dispatch(setMessage(true, `${error.response.data.message}`, true))\r\n    })\r\n}\r\n\r\nexport const removeCity = (data: WeatherDataType[]) => ({type: \"REMOVE-CITY\", data} as const)\r\ntype RemoveCityType = ReturnType<typeof removeCity>\r\n\r\nexport const findCityToRemove = (cityID: number) => (dispatch: Dispatch, getState: () => AppStateType) => {\r\n    const storage = localStorage.getItem(\"citiesID\")\r\n    const parsed = storage ? JSON.parse(storage) : []\r\n    const filtered = parsed.filter((el: number) => el !== cityID)\r\n    localStorage.setItem(\"citiesID\", JSON.stringify(filtered))\r\n\r\n    const data = getState().weather.filter((el) => el.id !== cityID)\r\n    dispatch(removeCity(data))\r\n}\r\n\r\nexport const addCitiesGroup = (data: WeatherDataType[]) => ({type: \"ADD-CITIES-GROUP\", data} as const)\r\ntype AddCitiesGroupType = ReturnType<typeof addCitiesGroup>\r\n\r\nexport const getCity = (city: string) => (dispatch: Dispatch, getState: () => AppStateType) => {\r\n    weatherAPI.getCities(city).then(response => {\r\n        if (response.status === 200) {\r\n            const data = getState().weather.map((el) => el.id)\r\n            localStorage.setItem(\"citiesID\", JSON.stringify([...data, response.data.id]))\r\n\r\n            dispatch(addCity(response.data))\r\n            dispatch(setMessage(false, \"success\", true))\r\n        }\r\n    }).catch((error) => {\r\n        if (error.response.status === 404) {\r\n            dispatch(setMessage(true, error.response.data.message, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const getCityByID = (id:number) => (dispatch: Dispatch, getState: () => AppStateType) => {\r\n    weatherAPI.getOneCityById(id).then((response) => {\r\n        if (response.status === 200) {\r\n            const data = getState().weather.map((el) => el.id)\r\n            localStorage.setItem(\"citiesID\", JSON.stringify([...data, response.data.id]))\r\n\r\n            dispatch(addCity(response.data))\r\n            dispatch(setMessage(false, \"success\", true))\r\n        }\r\n    }).catch((error) => {\r\n        if (error.response.status === 404) {\r\n            dispatch(setMessage(true, error.response.data.message, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const getGroupOfCities = (group: string[]) => (dispatch: Dispatch) => {\r\n    weatherAPI.getCitiesById(group).then(response => {\r\n        dispatch(addCitiesGroup(response.data.list))\r\n    })\r\n}\r\n\r\nexport default weatherReducer","export default __webpack_public_path__ + \"static/media/cloud.d61cc57a.jpg\";","export default __webpack_public_path__ + \"static/media/rain.615edd1e.jpg\";","export default __webpack_public_path__ + \"static/media/snow.939aeb64.jpg\";","export default __webpack_public_path__ + \"static/media/haze.b3f2c6c7.jpg\";","export default __webpack_public_path__ + \"static/media/clear.396ebddd.jpg\";","import React from \"react\";\r\nimport s from \"./Card.module.css\";\r\nimport Title from \"../common/Title/Title\";\r\nimport cloudImg from \"../../assets/weather/cloud.jpg\"\r\nimport rainImg from \"../../assets/weather/rain.jpg\"\r\nimport snowImg from \"../../assets/weather/snow.jpg\"\r\nimport hazeImg from \"../../assets/weather/haze.jpg\"\r\nimport clearImg from \"../../assets/weather/clear.jpg\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport {SysType, WeatherType} from \"../../store/weatherReducerTypes\";\r\nimport Button from \"../common/Button/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n    temp: number\r\n    sys: SysType\r\n    weather: WeatherType\r\n    removeCard: (cardID: number) => void\r\n    refreshCard: (cardID: number) => void\r\n}\r\n\r\nconst date = new Date()\r\nconst dd = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`\r\nconst mm = date.getMonth() < 10 ? `0${date.getMonth()}` : `${date.getMonth()}`\r\nconst yy = `${date.getFullYear()}`\r\n\r\nconst Card: React.FC<PropsType> = ({name, id, temp, weather, sys, removeCard, refreshCard}) => {\r\n    let weatherBg: string = clearImg\r\n    switch (weather.main) {\r\n        case \"Snow\":\r\n            weatherBg = snowImg\r\n            break\r\n        case \"Clear\":\r\n            weatherBg = clearImg\r\n            break\r\n        case \"Rain\":\r\n            weatherBg = rainImg\r\n            break\r\n        case \"Clouds\":\r\n            weatherBg = cloudImg\r\n            break\r\n        case \"Haze\":\r\n            weatherBg = hazeImg\r\n            break\r\n        case \"Mist\":\r\n            weatherBg = hazeImg\r\n            break\r\n        case \"Fog\":\r\n            weatherBg = hazeImg\r\n            break\r\n    }\r\n\r\n    const onRemoveClick = () => {\r\n        removeCard(id)\r\n    }\r\n\r\n    const onRefreshClick = () => {\r\n        refreshCard(id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <NavLink to={`/main/${id}`} className={s.card}>\r\n                <img className={s.bg} src={weatherBg} alt=\"weather\"/>\r\n                <Title title={`${name} (${sys.country})`} className={s.title}><img style={{marginRight: \"10px\"}}\r\n                                                                                   src={`https://openweathermap.org/images/flags/${sys.country.toLowerCase()}.png`}\r\n                                                                                   alt=\"\"/></Title>\r\n                <div className={s.info}>\r\n                    <img className={s.icon} src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`} alt=\"\"/>\r\n                    <span className={s.date}>{`${dd}.${mm}.${yy}`}</span>\r\n                    <span className={s.temp}>{`${Math.round(temp)}°C`}</span>\r\n                    <span className={s.description}>{weather.description} in {name}</span>\r\n                </div>\r\n            </NavLink>\r\n            <div className={s.buttons}>\r\n                <button onClick={onRefreshClick} className={s.refresh}><CachedIcon style={{color: \"#fff\"}}/></button>\r\n                <Button onClick={onRemoveClick} className={s.remove}><CloseIcon style={{color: \"#fff\"}}/></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport s from \"./SearchResultItem.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    name: string\r\n    country: string\r\n    id: number\r\n    onClick: (value:number) => void\r\n}\r\nconst SearchResultItem:React.FC<PropsType> = ({name, country, id,onClick}) => {\r\n\r\n    const handler = () => {\r\n        onClick(id)\r\n    }\r\n\r\n    return (\r\n        <li className={s.item} onClick={handler}>\r\n            <img src={`https://openweathermap.org/images/flags/${country.toLowerCase()}.png`} alt=\"flag\"/>\r\n            <span className={s.country}>{country}</span>\r\n            <span>{name}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SearchResultItem;","import {Dispatch} from \"redux\";\r\nimport {searchAPI} from \"../api/api\";\r\nimport {SearchDataType} from \"./searchReducerTypes\";\r\n\r\n\r\n\r\nconst initialState:Array<SearchDataType> = []\r\n\r\ntype ActionType = searchActionType | ResetSearchReducerType\r\n\r\nconst searchReducer = (state = initialState, action:ActionType) => {\r\n    switch(action.type) {\r\n        case \"SEARCH-ACTION\": {\r\n            return [...action.data]\r\n        }\r\n        case 'RESET-SEARCH-REDUCER': {\r\n            return []\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const resetSearchReducer = () => ({type: 'RESET-SEARCH-REDUCER'} as const)\r\ntype ResetSearchReducerType = ReturnType<typeof resetSearchReducer>\r\n\r\nconst searchAction = (data:Array<SearchDataType>) => ({type: \"SEARCH-ACTION\", data} as const)\r\ntype searchActionType = ReturnType<typeof searchAction>\r\n\r\nexport const getSearchResult = (value:string) => (dispatch: Dispatch) => {\r\n    searchAPI.getSearch(value).then(response => {\r\n        dispatch(searchAction(response.data.list))\r\n    })\r\n}\r\n\r\n\r\nexport default searchReducer;","import s from \"./Search.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport SearchResultItem from \"../../SearchResulItem/SearchResultItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport {SearchDataType} from \"../../../store/searchReducerTypes\";\r\nimport {getSearchResult, resetSearchReducer} from \"../../../store/searchReducer\";\r\nimport {getCity, getCityByID} from \"../../../store/weatherReducer\";\r\nimport Button from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    onClick: (bool: boolean) => void\r\n}\r\n\r\nconst Search: React.FC<PropsType> = ({onClick}) => {\r\n    const [value, setValue] = useState<string>(\"\")\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorText, setErrorText] = useState<string>(\"\")\r\n    const [timeoutID, setTimeoutID] = useState<number>(0)\r\n    const [showSearchHelper, setShowSearchHelper] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const searchData = useSelector<AppStateType, Array<SearchDataType>>(state => state.search)\r\n\r\n\r\n    useEffect(() => {\r\n        const id: number = window.setTimeout(() => {\r\n            value.length > 2 && dispatch(getSearchResult(value))\r\n        }, 1000)\r\n        setTimeoutID(id)\r\n        return clearTimeout(timeoutID)\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        searchData.length ? setShowSearchHelper(true) : setShowSearchHelper(false)\r\n    }, [searchData])\r\n\r\n    const onSearchItemClick = (cityID: number) => {\r\n        dispatch(getCityByID(cityID))\r\n        dispatch(resetSearchReducer())\r\n        onClick(false)\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(false)\r\n        setErrorText(\"\")\r\n        setValue(e.currentTarget.value.replace(/\\d/, \"\"))\r\n    }\r\n    const onClickHandler = () => {\r\n        setValue(value.trim())\r\n        if (!value) {\r\n            setError(true)\r\n            setErrorText(\"Name must not be empty\")\r\n        } else if (value.length < 2) {\r\n            setError(true)\r\n            setErrorText(\"Name must contain more than one character\")\r\n        } else {\r\n            dispatch(getCity(value.trim()))\r\n            dispatch(resetSearchReducer())\r\n            onClick(false)\r\n        }\r\n    }\r\n\r\n\r\n    const errorStyle = error ? `${s.input} ${s.errorStyle}` : s.input\r\n\r\n    const searchResult = searchData.length ? searchData.map((s) => <SearchResultItem key={s.id}\r\n                                                                                     name={s.name}\r\n                                                                                     id={s.id}\r\n                                                                                     country={s.sys.country}\r\n                                                                                     onClick={onSearchItemClick}/>) : \"\"\r\n\r\n\r\n    return (\r\n        <>\r\n            <label className={s.label}>\r\n                <span className={s.error}>{errorText}</span>\r\n                <input className={errorStyle}\r\n                       type=\"text\"\r\n                       value={value}\r\n                       placeholder=\"Write here\"\r\n                       autoFocus\r\n                       onChange={onChangeHandler}/>\r\n\r\n                {showSearchHelper && <ul className={s.searchList}>{searchResult}</ul>}\r\n            </label>\r\n            <Button className={s.send} onClick={onClickHandler}>Отправить</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport s from \"./AddMode.module.css\";\r\nimport Title from \"../common/Title/Title\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from \"../common/Button/Button\";\r\nimport Search from \"../common/Search/Search\";\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\ntype PropsType = {\r\n    onSearchFinish: (bool: boolean) => void\r\n}\r\n\r\nconst AddForm: React.FC<PropsType> = ({onSearchFinish}) => {\r\n    const onCloseClick = () => {\r\n         onSearchFinish(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.mask} onClick={onCloseClick}></div>\r\n            <div className={s.form}>\r\n                <Title title=\"Enter city\"><LocationCityIcon style={{marginRight:\"10px\"}}/></Title>\r\n                <Search onClick={onSearchFinish}/>\r\n                <Button className={s.close} onClick={onCloseClick}><CloseIcon style={{color: \"#000\"}}/></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import s from \"./Main.module.css\";\r\nimport CardButton from \"../common/CardButton/CardButton\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {WeatherDataType} from \"../../store/weatherReducerTypes\";\r\nimport {findCityToRemove, getGroupOfCities, getRefreshedCity} from \"../../store/weatherReducer\";\r\nimport Card from \"../Card/Card\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\n\r\nconst Main = () => {\r\n    const weather = useSelector<AppStateType, Array<WeatherDataType>>((state) => state.weather)\r\n    const dispatch = useDispatch()\r\n    const [addMode, setAddMode] = useState<boolean>(false)\r\n\r\n\r\n    const handler = (bool: boolean) => {\r\n        setAddMode(bool)\r\n    }\r\n\r\n    const removeCard = (cardID: number) => {\r\n        dispatch(findCityToRemove(cardID))\r\n    }\r\n\r\n    const refreshCard = (cardID: number) => {\r\n        dispatch(getRefreshedCity(cardID))\r\n    }\r\n\r\n\r\n    const storage = localStorage.getItem(\"citiesID\")\r\n    const citiesID = storage ? JSON.parse(storage) : []\r\n\r\n    useEffect(() => {\r\n        !weather.length && citiesID.length && dispatch(getGroupOfCities(citiesID))\r\n    }, [])\r\n\r\n    const cards = weather.map((s: WeatherDataType) => <Card key={s.id}\r\n                                                            id={s.id}\r\n                                                            name={s.name}\r\n                                                            temp={s.main.temp}\r\n                                                            sys={s.sys}\r\n                                                            removeCard={removeCard}\r\n                                                            refreshCard={refreshCard}\r\n                                                            weather={s.weather[0]}/>)\r\n\r\n    return (\r\n        <>\r\n            <div className={s.cardsWrapper}>\r\n                <CardButton onClick={handler}/>\r\n                {cards}\r\n            </div>\r\n            {addMode && <AddForm onSearchFinish={handler}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport s from \"./NotFoundPage.module.css\";\r\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst NotFoundPage = () =>\r\n    <div className={s.wrapper}>\r\n        <div className={s.content}>\r\n            <CloudOffIcon style={{fontSize: \"50px\", color: \"#fff\"}}/>\r\n            <span className={s.text}>404</span>\r\n            <span className={s.text}>Page not found</span>\r\n            <NavLink className={s.link} to={PATH.MAIN}><ArrowBackIcon style={{marginRight: \"2px\", fontSize:\"20px\"}}/>back</NavLink>\r\n        </div>\r\n    </div>\r\n\r\nexport default NotFoundPage;","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CardPage from \"./components/CardPage/CardPage\";\r\nimport Main from \"./components/Main/Main\";\r\nimport NotFoundPage from \"./components/NotFoundPage/NotFoundPage\";\r\n\r\n\r\n\r\nexport const PATH = {\r\n    MAIN: \"/main\",\r\n    CARD: `/main/:id`\r\n}\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/\" || \"https://arthur-tolkachov.github.io/CloudAPP\"} exact render={() => <Redirect to={PATH.MAIN}/>}/>\r\n            <Route exact path={PATH.MAIN} render={() => <Main/>}/>\r\n            <Route path={PATH.CARD} render={() => <CardPage/>}/>\r\n            <Route render={() => <NotFoundPage />}/>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport s from \"./App.module.css\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"./store/store\";\nimport Title from './components/common/Title/Title';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from \"./components/common/Message/Message\";\nimport {CommonStateType} from \"./store/appReducerTypes\";\nimport Routes from './Routes';\n\nfunction App() {\n    const message = useSelector<AppStateType, CommonStateType>((state) => state.common)\n\n    return (\n        <div className={s.app}>\n            <Title title=\"Clouds cards APP\" className={s.title}><CloudIcon style={{marginRight: \"10px\"}}/></Title>\n            <Routes/>\n            <footer className={s.footer}>\n                <Title title=\"You are awesome so have a nice day\"><EmojiEmotionsIcon\n                    style={{marginRight: \"10px\"}}/></Title>\n            </footer>\n            {message.show && <Message message={message.message} error={message.error}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport currentCityReducer from \"./currentCityReducer\";\r\nimport hourlyDataReducer from \"./hourlyDataReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    weather: weatherReducer,\r\n    search: searchReducer,\r\n    common: appReducer,\r\n    currentCity: currentCityReducer,\r\n    hourly: hourlyDataReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}