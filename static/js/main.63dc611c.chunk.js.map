{"version":3,"sources":["components/common/Search/Search.module.css","App.module.css","components/AddForm/AddMode.module.css","components/common/Message/Message.module.css","components/common/CardButton/CardButton.module.css","components/SearchResulItem/SearchResultItem.module.css","components/common/Title/Title.module.css","components/Card/Card.module.css","components/common/Title/Title.tsx","assets/weather/cloud.jpg","assets/weather/rain.jpg","assets/weather/snow.jpg","assets/weather/haze.jpg","assets/weather/clear.jpg","components/common/Button/Button.tsx","components/Card/Card.tsx","components/common/CardButton/CardButton.tsx","components/SearchResulItem/SearchResultItem.tsx","api/api.ts","store/searchReducer.ts","store/appReducer.ts","store/weatherReducer.ts","components/common/Search/Search.tsx","components/AddForm/AddForm.tsx","components/common/Message/Message.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","Title","title","style","className","children","classes","s","Button","onClick","restProps","date","Date","dd","getDate","mm","getMonth","yy","getFullYear","Card","name","id","temp","weather","sys","removeCard","refreshCard","weatherBg","clearImg","main","snowImg","rainImg","cloudImg","hazeImg","card","bg","src","alt","country","marginRight","toLowerCase","info","icon","Math","round","description","buttons","refresh","color","remove","CardButton","wrapper","btn","fontSize","SearchResultItem","useState","value","setValue","useEffect","item","instance","axios","create","baseURL","key","weatherAPI","city","get","group","join","cityID","searchAPI","initialState","searchReducer","state","action","type","data","error","message","show","setMessage","appReducer","weatherReducer","validate","find","el","newState","map","Search","setError","errorText","setErrorText","timeoutID","setTimeoutID","showSearchHelper","setShowSearchHelper","dispatch","useDispatch","searchData","useSelector","search","window","setTimeout","length","then","response","list","getSearchResult","clearTimeout","onSearchItemClick","onClickHandler","trim","getState","status","localStorage","setItem","JSON","stringify","addCity","catch","errorStyle","input","searchResult","label","placeholder","autoFocus","onChange","e","currentTarget","replace","searchList","send","AddForm","onSearchFinish","onCloseClick","mask","form","close","Message","messageStyle","progressbar","animationDuration","App","common","addMode","setAddMode","handler","bool","cardID","storage","getItem","filtered","parse","filter","citiesID","cards","console","log","app","cardsWrapper","footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63dc611c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__1nRsR\",\"input\":\"Search_input__3KYZK\",\"errorStyle\":\"Search_errorStyle__1e8H4\",\"send\":\"Search_send__J10O8\",\"error\":\"Search_error__3TZeS\",\"searchList\":\"Search_searchList__Abnnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3jqhq\",\"cardsWrapper\":\"App_cardsWrapper__1gZdF\",\"title\":\"App_title__1IkJy\",\"footer\":\"App_footer__37TDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddMode_wrapper__101Kg\",\"mask\":\"AddMode_mask__3PgEO\",\"form\":\"AddMode_form__3SaAH\",\"close\":\"AddMode_close__31jhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2N8MC\",\"progressbar\":\"Message_progressbar__yKWpq\",\"animate\":\"Message_animate__3qnUc\",\"error\":\"Message_error__1t7X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardButton_wrapper__3JBkr\",\"btn\":\"CardButton_btn__3gFKH\",\"title\":\"CardButton_title__3QGYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchResultItem_item__2l1tz\",\"country\":\"SearchResultItem_country__3V1Ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__iWpEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1trhp\",\"bg\":\"Card_bg__gTgqw\",\"title\":\"Card_title___D0DM\",\"icon\":\"Card_icon__VIndm\",\"info\":\"Card_info__XI5iQ\",\"date\":\"Card_date__2aIS4\",\"temp\":\"Card_temp__1rb5I\",\"description\":\"Card_description__2pdNs\",\"buttons\":\"Card_buttons__30KMi\",\"refresh\":\"Card_refresh__2YCdE\",\"remove\":\"Card_remove__366hq\"};","import React from \"react\";\r\nimport s from \"./Title.module.css\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    style?: {}\r\n    className?: string\r\n}\r\nconst Title:React.FC<PropsType> = ({title, style, className, children}) => {\r\n    const classes = className || \"\"\r\n\r\n    return(\r\n        <div className={classes}>\r\n            <span className={s.title} style={style}>{children}{title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","export default __webpack_public_path__ + \"static/media/cloud.d61cc57a.jpg\";","export default __webpack_public_path__ + \"static/media/rain.615edd1e.jpg\";","export default __webpack_public_path__ + \"static/media/snow.939aeb64.jpg\";","export default __webpack_public_path__ + \"static/media/haze.b3f2c6c7.jpg\";","export default __webpack_public_path__ + \"static/media/clear.396ebddd.jpg\";","import React from \"react\";\r\n\r\ntype PropsType = {\r\n    onClick: () => void\r\n    className?: string\r\n}\r\n\r\nconst Button: React.FC<PropsType> = ({onClick, className, ...restProps}) => {\r\n    return(\r\n        <button className={className} onClick={onClick} {...restProps}></button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport s from \"./Card.module.css\";\r\nimport Title from \"../common/Title/Title\";\r\nimport cloudImg from \"../../assets/weather/cloud.jpg\"\r\nimport rainImg from \"../../assets/weather/rain.jpg\"\r\nimport snowImg from \"../../assets/weather/snow.jpg\"\r\nimport hazeImg from \"../../assets/weather/haze.jpg\"\r\nimport clearImg from \"../../assets/weather/clear.jpg\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport {SysType, WeatherType} from \"../../store/weatherReducerTypes\";\r\nimport Button from \"../common/Button/Button\";\r\n\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n    temp: number\r\n    sys: SysType\r\n    weather: WeatherType\r\n    removeCard: (cardID: number) => void\r\n    refreshCard: (cardID: number) => void\r\n}\r\n\r\nconst date = new Date()\r\nconst dd = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`\r\nconst mm = date.getMonth() < 10 ? `0${date.getMonth()}` : `${date.getMonth()}`\r\nconst yy = `${date.getFullYear()}`\r\n\r\nconst Card: React.FC<PropsType> = ({name, id, temp, weather, sys, removeCard, refreshCard}) => {\r\n    let weatherBg: string = clearImg\r\n    switch (weather.main) {\r\n        case \"Snow\":\r\n            weatherBg = snowImg\r\n            break\r\n        case \"Clear\":\r\n            weatherBg = clearImg\r\n            break\r\n        case \"Rain\":\r\n            weatherBg = rainImg\r\n            break\r\n        case \"Clouds\":\r\n            weatherBg = cloudImg\r\n            break\r\n        case \"Haze\":\r\n            weatherBg = hazeImg\r\n            break\r\n        case \"Mist\":\r\n            weatherBg = hazeImg\r\n            break\r\n    }\r\n\r\n    const onRemoveClick = () => {\r\n        removeCard(id)\r\n    }\r\n\r\n    const onRefreshClick = () => {\r\n        refreshCard(id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.card}>\r\n            <img className={s.bg} src={weatherBg} alt=\"weather\"/>\r\n            <Title title={`${name} (${sys.country})`} className={s.title}><img style={{marginRight: \"10px\"}}\r\n                                                                               src={`https://openweathermap.org/images/flags/${sys.country.toLowerCase()}.png`}\r\n                                                                               alt=\"\"/></Title>\r\n            <div className={s.info}>\r\n                <img className={s.icon} src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`} alt=\"\"/>\r\n                <span className={s.date}>{`${dd}.${mm}.${yy}`}</span>\r\n                <span className={s.temp}>{`${Math.round(temp)}°C`}</span>\r\n                <span className={s.description}>{weather.description} in {name}</span>\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <button onClick={onRefreshClick} className={s.refresh}><CachedIcon style={{color: \"#fff\"}}/></button>\r\n                <Button onClick={onRemoveClick} className={s.remove}><CloseIcon style={{color: \"#fff\"}}/></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import s from \"./CardButton.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React from \"react\";\r\nimport Button from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    onClick: (bool:boolean) => void\r\n}\r\n\r\nconst CardButton: React.FC<PropsType> = ({onClick}) => {\r\n    const handler = () => {\r\n        onClick(true)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <span className={s.title}>Add new place to your cards list</span>\r\n            <Button className={s.btn} onClick={handler}><AddIcon style={{color: \"#fff\", fontSize: \"140px\"}}/></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardButton;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./SearchResultItem.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    name: string\r\n    country: string\r\n    onClick: (value:string) => void\r\n}\r\nconst SearchResultItem:React.FC<PropsType> = ({name, country, onClick}) => {\r\n    const [value, setValue] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        setValue(name)\r\n    }, [name])\r\n\r\n    const handler = () => {\r\n        onClick(value)\r\n    }\r\n\r\n    return (\r\n        <li className={s.item} onClick={handler}>\r\n            <img src={`https://openweathermap.org/images/flags/${country.toLowerCase()}.png`} alt=\"flag\"/>\r\n            <span className={s.country}>{country}</span>\r\n            <span>{name}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SearchResultItem;","import axios from \"axios\";\r\nimport {WeatherDataType} from \"../store/weatherReducerTypes\";\r\nimport {SearchDataType} from \"../store/searchReducerTypes\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n})\r\nconst key = \"ca71cc9121f92b686ca23cb9135132aa\"\r\n\r\ntype WeatherArrayType = {\r\n    cnt: number\r\n    list: WeatherDataType[]\r\n}\r\n\r\nexport const weatherAPI = {\r\n    getCities(city: string) {\r\n        return instance.get<WeatherDataType>(`weather?q=${city}&units=metric&appid=${key}`)\r\n    },\r\n    getCitiesById(group: string[]) {\r\n        return instance.get<WeatherArrayType>(`group?id=${group.join(\",\")}&units=metric&appid=${key}`)\r\n    },\r\n    updateCityData(cityID: number) {\r\n        return instance.get<WeatherArrayType>(`group?id=${cityID}&units=metric&appid=${key}`)\r\n    }\r\n}\r\n\r\ntype searchAPIType = {\r\n    message: string\r\n    cod: string\r\n    count: number\r\n    list: Array<SearchDataType>\r\n}\r\nexport const searchAPI = {\r\n    getSearch(city: string) {\r\n        return instance.get<searchAPIType>(`find?q=${city}&units=metric&appid=${key}`)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {searchAPI} from \"../api/api\";\r\nimport {SearchDataType} from \"./searchReducerTypes\";\r\n\r\n\r\n\r\nconst initialState:Array<SearchDataType> = []\r\n\r\ntype ActionType = searchActionType | ResetSearchReducerType\r\n\r\nconst searchReducer = (state = initialState, action:ActionType) => {\r\n    switch(action.type) {\r\n        case \"SEARCH-ACTION\": {\r\n            return [...action.data]\r\n        }\r\n        case 'RESET-SEARCH-REDUCER': {\r\n            return []\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const resetSearchReducer = () => ({type: 'RESET-SEARCH-REDUCER'} as const)\r\ntype ResetSearchReducerType = ReturnType<typeof resetSearchReducer>\r\n\r\nconst searchAction = (data:Array<SearchDataType>) => ({type: \"SEARCH-ACTION\", data} as const)\r\ntype searchActionType = ReturnType<typeof searchAction>\r\n\r\nexport const getSearchResult = (value:string) => (dispatch: Dispatch) => {\r\n    searchAPI.getSearch(value).then(response => {\r\n        dispatch(searchAction(response.data.list))\r\n    })\r\n}\r\n\r\nexport default searchReducer;","import {CommonStateType} from \"./appReducerTypes\";\r\n\r\ntype ActionType = SetMessageType\r\nconst initialState:CommonStateType = {\r\n    error: false,\r\n    message: \"\",\r\n    show: false\r\n}\r\nconst appReducer = (state = initialState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case \"SET-MESSAGE\": {\r\n            return {...action.data}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (error:boolean, message:string, show:boolean) => ({type: 'SET-MESSAGE', data:{error, message, show}} as const)\r\ntype SetMessageType = ReturnType<typeof setMessage>\r\n\r\nexport default appReducer;","import {Dispatch} from \"redux\"\r\nimport {weatherAPI} from \"../api/api\"\r\nimport {WeatherDataType} from \"./weatherReducerTypes\";\r\nimport {setMessage} from \"./appReducer\";\r\nimport {AppStateType} from \"./store\";\r\n\r\ntype ActionType =\r\n    | AddCityType\r\n    | AddCitiesGroupType\r\n    | RemoveCityType\r\n    | RefreshCityType\r\n\r\nconst initialState: Array<WeatherDataType> = []\r\n\r\nconst weatherReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"ADD-CITY\": {\r\n            const validate = state.find((el) => el.id === action.data.id)\r\n            if (!validate) {\r\n                return [...state, action.data]\r\n            }\r\n            return state\r\n        }\r\n        case \"ADD-CITIES-GROUP\": {\r\n            return [...state, ...action.data]\r\n        }\r\n        case \"REMOVE-CITY\": {\r\n            return [...action.data]\r\n        }\r\n        case \"REFRESH-CITY\": {\r\n            let newState = [...state].map((el) => {\r\n                if(el.id === action.data[0].id) {\r\n                    return action.data[0]\r\n                } return el\r\n            })\r\n\r\n            return [...newState]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addCity = (data: WeatherDataType) => ({type: \"ADD-CITY\", data} as const)\r\ntype AddCityType = ReturnType<typeof addCity>\r\n\r\nexport const refreshCity = (data: WeatherDataType[]) => ({type: \"REFRESH-CITY\", data} as const)\r\ntype RefreshCityType = ReturnType<typeof refreshCity>\r\n\r\nexport const getRefreshedCity = (cityID: number) => (dispatch: Dispatch) => {\r\n    weatherAPI.updateCityData(cityID).then(response => {\r\n        dispatch(refreshCity(response.data.list))\r\n    })\r\n}\r\n\r\nexport const removeCity = (data: WeatherDataType[]) => ({type: \"REMOVE-CITY\", data} as const)\r\ntype RemoveCityType = ReturnType<typeof removeCity>\r\n\r\nexport const findCityToRemove = (cityID: number) => (dispatch: Dispatch, getState: () => AppStateType) => {\r\n    const storage = localStorage.getItem(\"citiesID\")\r\n    const parsed = storage ? JSON.parse(storage) : []\r\n    const filtered = parsed.filter((el: number) => el !== cityID)\r\n    localStorage.setItem(\"citiesID\", JSON.stringify(filtered))\r\n\r\n    const data = getState().weather.filter((el) => el.id !== cityID)\r\n    dispatch(removeCity(data))\r\n}\r\n\r\nexport const addCitiesGroup = (data: WeatherDataType[]) => ({type: \"ADD-CITIES-GROUP\", data} as const)\r\ntype AddCitiesGroupType = ReturnType<typeof addCitiesGroup>\r\n\r\nexport const getCity = (city: string) => (dispatch: Dispatch, getState: () => AppStateType) => {\r\n    weatherAPI.getCities(city).then(response => {\r\n        if (response.status === 200) {\r\n            const data = getState().weather.map((el) => el.id)\r\n            localStorage.setItem(\"citiesID\", JSON.stringify([...data, response.data.id]))\r\n\r\n            dispatch(addCity(response.data))\r\n            dispatch(setMessage(false, \"success\", true))\r\n        }\r\n    }).catch((error) => {\r\n        if (error.response.status === 404) {\r\n            dispatch(setMessage(true, error.response.data.message, true))\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getGroupOfCities = (group: string[]) => (dispatch: Dispatch) => {\r\n    weatherAPI.getCitiesById(group).then(response => {\r\n        dispatch(addCitiesGroup(response.data.list))\r\n    })\r\n}\r\n\r\nexport default weatherReducer","import s from \"./Search.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport SearchResultItem from \"../../SearchResulItem/SearchResultItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport {SearchDataType} from \"../../../store/searchReducerTypes\";\r\nimport {getSearchResult, resetSearchReducer} from \"../../../store/searchReducer\";\r\nimport {getCity} from \"../../../store/weatherReducer\";\r\nimport Button from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    onClick: (bool: boolean) => void\r\n}\r\n\r\nconst Search: React.FC<PropsType> = ({onClick}) => {\r\n    const [value, setValue] = useState<string>(\"\")\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [errorText, setErrorText] = useState<string>(\"\")\r\n    const [timeoutID, setTimeoutID] = useState<number>(0)\r\n    const [showSearchHelper, setShowSearchHelper] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const searchData = useSelector<AppStateType, Array<SearchDataType>>(state => state.search)\r\n\r\n\r\n    useEffect(() => {\r\n        const id: number = window.setTimeout(() => {\r\n            value.length > 2 && dispatch(getSearchResult(value))\r\n        }, 1000)\r\n        setTimeoutID(id)\r\n        return clearTimeout(timeoutID)\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        searchData.length ? setShowSearchHelper(true) : setShowSearchHelper(false)\r\n    }, [searchData])\r\n\r\n    const onSearchItemClick = (value: string) => {\r\n        setValue(value)\r\n        onClickHandler()\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(false)\r\n        setErrorText(\"\")\r\n        setValue(e.currentTarget.value.replace(/\\d/, \"\"))\r\n    }\r\n    const onClickHandler = () => {\r\n        setValue(value.trim())\r\n        if (!value) {\r\n            setError(true)\r\n            setErrorText(\"Name must not be empty\")\r\n        } else if (value.length < 2) {\r\n            setError(true)\r\n            setErrorText(\"Name must contain more than one character\")\r\n        } else {\r\n            dispatch(getCity(value.trim()))\r\n            dispatch(resetSearchReducer())\r\n            onClick(false)\r\n        }\r\n    }\r\n\r\n\r\n    const errorStyle = error ? `${s.input} ${s.errorStyle}` : s.input\r\n\r\n    const searchResult = searchData.length ? searchData.map((s) => <SearchResultItem key={s.id}\r\n                                                                                     name={s.name}\r\n                                                                                     country={s.sys.country}\r\n                                                                                     onClick={onSearchItemClick}/>) : \"\"\r\n\r\n\r\n    return (\r\n        <>\r\n            <label className={s.label}>\r\n                <span className={s.error}>{errorText}</span>\r\n                <input className={errorStyle}\r\n                       type=\"text\"\r\n                       value={value}\r\n                       placeholder=\"Write here\"\r\n                       autoFocus\r\n                       onChange={onChangeHandler}/>\r\n\r\n                {showSearchHelper && <ul className={s.searchList}>{searchResult}</ul>}\r\n            </label>\r\n            <Button className={s.send} onClick={onClickHandler}>Отправить</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport s from \"./AddMode.module.css\";\r\nimport Title from \"../common/Title/Title\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from \"../common/Button/Button\";\r\nimport Search from \"../common/Search/Search\";\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\ntype PropsType = {\r\n    onSearchFinish: (bool: boolean) => void\r\n}\r\n\r\nconst AddForm: React.FC<PropsType> = ({onSearchFinish}) => {\r\n    const onCloseClick = () => {\r\n         onSearchFinish(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.mask} onClick={onCloseClick}></div>\r\n            <div className={s.form}>\r\n                <Title title=\"Enter city\"><LocationCityIcon style={{marginRight:\"10px\"}}/></Title>\r\n                <Search onClick={onSearchFinish}/>\r\n                <Button className={s.close} onClick={onCloseClick}><CloseIcon style={{color: \"#000\"}}/></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Message.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setMessage} from \"../../../store/appReducer\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n    error: boolean\r\n}\r\n\r\nconst Message:React.FC<PropsType> = ({message, error}) => {\r\n    const dispatch = useDispatch()\r\n    const [timeoutID, setTimeoutID] = useState<number>(0)\r\n    const progressDuration = 3000\r\n\r\n    useEffect(() => {\r\n        const id:number = window.setTimeout(() => {\r\n            dispatch(setMessage(false, \"\", false))\r\n        }, progressDuration)\r\n        setTimeoutID(id)\r\n        return clearTimeout(timeoutID)\r\n    },[])\r\n\r\n    const messageStyle = error ? `${s.message} ${s.error}` : s.message\r\n\r\n    return (\r\n        <div className={messageStyle}>\r\n            <div className={s.progressbar} style={{animationDuration: `${progressDuration}ms`}}></div>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {useEffect, useState} from 'react';\nimport s from \"./App.module.css\";\nimport Card from \"./components/Card/Card\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"./store/store\";\nimport Title from './components/common/Title/Title';\nimport CardButton from './components/common/CardButton/CardButton';\nimport AddForm from \"./components/AddForm/AddForm\";\nimport {WeatherDataType} from \"./store/weatherReducerTypes\";\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from \"./components/common/Message/Message\";\nimport {CommonStateType} from \"./store/appReducerTypes\";\nimport {findCityToRemove, getGroupOfCities, getRefreshedCity} from \"./store/weatherReducer\";\n\nfunction App() {\n    const weather = useSelector<AppStateType, Array<WeatherDataType>>((state) => state.weather)\n    const message = useSelector<AppStateType, CommonStateType>((state) => state.common)\n    const dispatch = useDispatch()\n\n    const [addMode, setAddMode] = useState<boolean>(false)\n\n    const handler = (bool: boolean) => {\n        setAddMode(bool)\n    }\n\n    const removeCard = (cardID: number) => {\n        dispatch(findCityToRemove(cardID))\n    }\n\n    const refreshCard = (cardID: number) => {\n        dispatch(getRefreshedCity(cardID))\n    }\n\n\n    const storage = localStorage.getItem(\"citiesID\")\n    const citiesID = storage ? JSON.parse(storage) : []\n\n    useEffect(() => {\n        citiesID.length && dispatch(getGroupOfCities(citiesID))\n    },[])\n\n    const cards = weather.map((s: WeatherDataType) => {\n        console.log(s)\n       return <Card key={s.id}\n        id={s.id}\n        name={s.name}\n        temp={s.main.temp}\n        sys={s.sys}\n        removeCard={removeCard}\n        refreshCard={refreshCard}\n        weather={s.weather[0]}/>\n    })\n\n    return (\n        <div className={s.app}>\n            <Title title=\"Clouds cards APP\" className={s.title}><CloudIcon style={{marginRight:\"10px\"}}/></Title>\n            <div className={s.cardsWrapper}>\n                <CardButton onClick={handler}/>\n                {cards}\n            </div>\n            {addMode && <AddForm onSearchFinish={handler}/>}\n            <footer className={s.footer}>\n                <Title title=\"You are awesome so have a nice day\"><EmojiEmotionsIcon style={{marginRight: \"10px\"}}/></Title>\n            </footer>\n            {message.show && <Message message={message.message} error={message.error}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    weather: weatherReducer,\r\n    search: searchReducer,\r\n    common: appReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}